components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        Identifiable:
            properties:
                id:
                    type: string
            required:
                - id
            type: object
            additionalProperties: false
        Category:
            properties:
                description:
                    type: string
                logoUrlStr:
                    type: string
                name:
                    type: string
            required:
                - name
            type: object
            additionalProperties: false
        IdentifiableCategory:
            properties:
                description:
                    type: string
                logoUrlStr:
                    type: string
                name:
                    type: string
                id:
                    type: string
            required:
                - name
                - id
            type: object
            additionalProperties: false
        IdentifiablePerson:
            properties:
                id:
                    type: string
                avatarUrlStr:
                    type: string
                prename:
                    type: string
                surname:
                    type: string
            required:
                - id
                - prename
                - surname
            type: object
            additionalProperties: false
        Retailer:
            properties:
                logoUrlStr:
                    type: string
                name:
                    type: string
            required:
                - name
            type: object
            additionalProperties: false
        IdentifiableRetailer:
            properties:
                id:
                    type: string
                logoUrlStr:
                    type: string
                name:
                    type: string
            required:
                - id
                - name
            type: object
            additionalProperties: false
    securitySchemes: {}
info:
    title: TSOA
    version: 1.0.0
    description: 'Build swagger-compliant REST APIs using TypeScript and Node'
    license:
        name: MIT
    contact:
        name: unknown
openapi: 3.0.0
paths:
    /categories:
        post:
            operationId: CreateCategory
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Identifiable'
                '400':
                    description: 'Bad Request'
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Category'
        get:
            operationId: ReadCategories
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Identifiable'
                                type: array
            security: []
            parameters: []
    '/categories/{id}':
        get:
            operationId: ReadCategory
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdentifiableCategory'
                '404':
                    description: 'Not Found'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        type: string
    /persons:
        get:
            operationId: GetPersonsSync
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/IdentifiablePerson'
                                type: array
            security: []
            parameters: []
    '/persons/{id}':
        get:
            operationId: GetPersonSync
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdentifiablePerson'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        type: string
    /retailers:
        post:
            operationId: CreateRetailer
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Identifiable'
                '400':
                    description: 'Bad Request'
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Retailer'
        get:
            operationId: ReadRetailers
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Identifiable'
                                type: array
            security: []
            parameters: []
    '/retailers/{id}':
        get:
            operationId: ReadRetailer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdentifiableRetailer'
                '404':
                    description: 'Not Found'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        type: string
servers:
    -
        url: 'https://localhost:8080/v0'
